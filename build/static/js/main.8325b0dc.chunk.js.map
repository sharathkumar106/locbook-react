{"version":3,"sources":["shared/context/AuthContext.js","shared/components/FormElements/Button.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","token","userId","login","logout","Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","LoadingSpinner","asOverlay","Backdrop","ReactDOM","createPortal","document","getElementById","logoutTimer","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainHeader","NavLinks","auth","useContext","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","Authenticate","NewPlace","UserPlace","UpdatePlace","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.8325b0dc.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext(\r\n    {\r\n        isLoggedIn: false,\r\n        token: null,\r\n        userId: null,\r\n        login: () => { },\r\n        logout: () => { }\r\n    }\r\n);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'} ${props.className}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'} ${props.className}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'} ${props.className}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className={`lds-dual-ring ${props.className}`}></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState();\r\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n    const [userId, setUserId] = useState();\r\n\r\n    const login = useCallback((uid, token, expirationDate) => {\r\n        setToken(token);\r\n        setUserId(uid);\r\n        const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n        setTokenExpirationDate(tokenExpirationDate);\r\n        localStorage.setItem('userData', JSON.stringify(\r\n            {\r\n                userId: uid,\r\n                token: token,\r\n                expiration: tokenExpirationDate.toISOString()\r\n            }\r\n        ));\r\n    }, []);\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setTokenExpirationDate(null);\r\n        setUserId(null);\r\n        localStorage.removeItem('userData');\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (token && tokenExpirationDate) {\r\n            const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n            logoutTimer = setTimeout(logout, remainingTime);\r\n        }\r\n        else {\r\n            clearTimeout(logoutTimer);\r\n\r\n        }\r\n    }, [token, logout, tokenExpirationDate]);\r\n\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem('userData'));\r\n        if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\r\n            login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n        }\r\n    }, [login]);\r\n\r\n    return { login, logout, token, userId };\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props => {\r\n    const content = (\r\n        <CSSTransition\r\n            in={props.show}\r\n            timeout={200}\r\n            classNames=\"slide-in-left\"\r\n            mountOnEnter\r\n            unmountOnExit\r\n        >\r\n            <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n        </CSSTransition>\r\n    );\r\n\r\n    return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\r\n};\r\n\r\nexport default SideDrawer;","import React from 'react';\r\n\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = props => {\r\n    return (\r\n        <header className=\"main-header\">{props.children}</header>\r\n    );\r\n};\r\n\r\nexport default MainHeader;","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport Button from '../FormElements/Button';\r\n\r\nimport './NavLinks.css';\r\n\r\nconst NavLinks = props => {\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    return (\r\n        <ul className=\"nav-links\">\r\n            <li>\r\n                <NavLink to=\"/\" exact>ALL USERS</NavLink>\r\n            </li>\r\n            { auth.isLoggedIn &&\r\n                <li>\r\n                    <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n                </li>\r\n            }\r\n            { auth.isLoggedIn &&\r\n                <li>\r\n                    <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n                </li>\r\n            }\r\n            { !auth.isLoggedIn &&\r\n                <li>\r\n                    <NavLink to=\"/authenticate\">AUTHENTICATE</NavLink>\r\n                </li>\r\n            }\r\n            { auth.isLoggedIn &&\r\n                <li>\r\n                    <Button onClick={auth.logout}>LOGOUT</Button>\r\n                </li>\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default NavLinks;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport SideDrawer from './SideDrawer';\r\nimport MainHeader from './MainHeader';\r\nimport NavLinks from './NavLinks';\r\nimport Backdrop from '../UIElements/Backdrop';\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = props => {\r\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n    const openDrawerHandler = () => {\r\n        setDrawerIsOpen(true);\r\n    }\r\n\r\n    const closeDrawerHandler = () => {\r\n        setDrawerIsOpen(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n            <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n                <nav className=\"main-navigation__drawer-nav\">\r\n                    <NavLinks />\r\n                </nav>\r\n            </SideDrawer>\r\n            <MainHeader>\r\n                <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n                    <span />\r\n                    <span />\r\n                    <span />\r\n                </button>\r\n\r\n                <h1 className=\"main-navigation__title\">\r\n                    <Link to=\"/\">LocBook</Link>\r\n                </h1>\r\n\r\n                <nav className=\"main-navigation__header-nav\">\r\n                    <NavLinks />\r\n                </nav>\r\n            </MainHeader>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MainNavigation;\r\n","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\n// import Users from './users/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\n// import UserPlace from './places/pages/UserPlace';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Authenticate from './users/pages/Authenticate';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from './shared/context/AuthContext';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst Users = React.lazy(() => import('./users/pages/Users'));\nconst Authenticate = React.lazy(() => import('./users/pages/Authenticate'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlace = React.lazy(() => import('./places/pages/UserPlace'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\n\n\nconst App = () => {\n\n  const { login, logout, token, userId } = useAuth();\n\n  let routes;\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Users />\n        </Route>\n\n        <Route path=\"/:userId/places\" exact>\n          <UserPlace />\n        </Route>\n\n        <Route path='/places/new' exact>\n          <NewPlace />\n        </Route>\n\n        <Route path='/places/:placeId'>\n          <UpdatePlace />\n        </Route>\n\n        <Redirect to=\"/\" />\n\n      </Switch>\n    );\n  }\n  else {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlace />\n        </Route>\n        <Route path='/authenticate' exact>\n          <Authenticate />\n        </Route>\n\n        <Redirect to=\"/authenticate\" />\n      </Switch>\n    );\n  }\n\n\n\n  return (\n    <AuthContext.Provider value={\n      {\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }\n    }>\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense fallback={\n            <div className=\"center\">\n              <LoadingSpinner className=\"white-loader\" />\n            </div>\n          }>{routes}</Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}