{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","users/components/UserItem.js","users/components/UsersList.js","users/pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","to","id","process","name","placeCount","UsersList","items","length","map","user","key","places","desc","Users","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedUsers","setLoadedUsers","useEffect","a","responseData","users","fetchUsers","Fragment","ErrorModal","onClear","LoadingSpinner"],"mappings":"mHAAA,0BAYeA,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,+MCSEC,G,MAZA,SAAAJ,GACX,OACI,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACtD,yBACIG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,Y,QCgB5CE,G,MAlBE,SAAAV,GACb,OACI,wBAAIC,UAAU,aACV,kBAACF,EAAA,EAAD,CAAME,UAAU,sBACZ,kBAAC,IAAD,CAAMU,GAAE,WAAMX,EAAMY,GAAZ,YACJ,yBAAKX,UAAU,oBACX,kBAAC,EAAD,CAAQK,MAAK,UAAKO,wBAAL,YAAwCb,EAAMM,OAASC,IAAKP,EAAMc,QAEnF,yBAAKb,UAAU,mBACX,4BAAKD,EAAMc,MACX,4BAAKd,EAAMe,WAAX,IAA6C,IAArBf,EAAMe,WAAmB,QAAU,SAA3D,WCeTC,G,MA5BG,SAAAhB,GAEd,OAA2B,IAAvBA,EAAMiB,MAAMC,OAER,yBAAKjB,UAAU,UACX,+CAMR,wBAAIA,UAAU,cAEND,EAAMiB,MAAME,KAAI,SAAAC,GAAI,OAChB,kBAAC,EAAD,CACIC,IAAKD,EAAKR,GACVA,GAAIQ,EAAKR,GACTN,MAAOc,EAAKd,MACZQ,KAAMM,EAAKN,KACXC,WAAYK,EAAKE,OAAOJ,OACxBK,KAAMH,EAAKG,aCQpBC,UA3BD,WAAO,IAAD,EAEoCC,cAA9CC,EAFU,EAEVA,UAAWC,EAFD,EAECA,MAAOC,EAFR,EAEQA,YAAaC,EAFrB,EAEqBA,WAFrB,EAGoBC,qBAHpB,mBAGXC,EAHW,KAGEC,EAHF,KAelB,OAVAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,+EAEYN,EAAYf,mCAFxB,OAETsB,EAFS,OAGfH,EAAeG,EAAaC,OAHb,uGAAH,qDAMhBC,KACC,CAACT,IAGF,kBAAC,IAAMU,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYZ,MAAOA,EAAOa,QAASX,IACjCH,GAAa,yBAAKzB,UAAU,UAC5B,kBAACwC,EAAA,EAAD,CAAgBxC,UAAU,mBAEzByB,GAAaK,GAAe,kBAAC,EAAD,CAAWd,MAAOc","file":"static/js/8.5f176855.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './Avatar.css';\r\n\r\nconst Avatar = props => {\r\n    return (\r\n        <div className={`avatar ${props.className}`} style={props.style}>\r\n            <img\r\n                src={props.image}\r\n                alt={props.alt}\r\n                style={{ width: props.width, height: props.width }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Avatar from '../../shared/components/UIElements/Avatar';\r\nimport Card from '../../shared/components/UIElements/Card';\r\n\r\nimport './UserItem.css';\r\n\r\nconst UserItem = props => {\r\n    return (\r\n        <li className=\"user-item\">\r\n            <Card className=\"user-item__content\">\r\n                <Link to={`/${props.id}/places`}>\r\n                    <div className=\"user-item__image\">\r\n                        <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\r\n                    </div>\r\n                    <div className=\"user-item__info\">\r\n                        <h2>{props.name}</h2>\r\n                        <h3>{props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'} </h3>\r\n                    </div>\r\n                </Link>\r\n            </Card>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default UserItem;\r\n\r\n\r\n/*\r\n\r\n\r\n\r\n<div className=\"user-item__side side--back\">\r\n    <Link to={`/${props.id}/places`}>\r\n        <div className=\"user-item__info--description\">\r\n            {\r\n                Array.from(props.desc).map(location => {\r\n                    return (\r\n                        <p className=\"descripton__loc\" key={location}>{location}</p>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    </Link>\r\n</div>\r\n\r\n\r\n\r\n*/","import React from 'react';\r\n\r\nimport UserItem from './UserItem';\r\nimport './UsersList.css';\r\n\r\nconst UsersList = props => {\r\n\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div className=\"center\">\r\n                <h2>No users found</h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ul className=\"users-list\">\r\n            {\r\n                props.items.map(user =>\r\n                    <UserItem\r\n                        key={user.id}\r\n                        id={user.id}\r\n                        image={user.image}\r\n                        name={user.name}\r\n                        placeCount={user.places.length}\r\n                        desc={user.desc}\r\n                    />\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default UsersList;","import React, { useEffect, useState } from 'react';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport UsersList from '../components/UsersList';\r\n\r\nconst Users = () => {\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users');\r\n        setLoadedUsers(responseData.users);\r\n      } catch (error) { }\r\n    }\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      { isLoading && <div className=\"center\">\r\n        <LoadingSpinner className=\"white-loader\" />\r\n      </div>}\r\n      { !isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default Users;"],"sourceRoot":""}