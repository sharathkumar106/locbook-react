{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlace.js"],"names":["Card","props","className","style","children","Map","center","title","icon","useEffect","tt","window","map","key","container","zoom","addControl","FullscreenControl","NavigationControl","position","color","popupText","markerElement","document","createElement","markerContentElement","backgroundColor","appendChild","iconElement","backgroundImage","popup","Popup","offset","setHTML","Marker","element","anchor","setLngLat","setPopup","addTo","console","log","createMarker","lng","lat","id","PlaceItem","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","closeDeleteWarningHandler","confirmDeleteHandler","a","process","Authorization","token","onDelete","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","LoadingSpinner","asOverlay","src","image","alt","description","userId","creatorID","to","PlaceList","items","place","creator","location","onDeletePlace","UserPlace","loadedPlaces","setLoadedPlaces","useParams","responseData","places","fetchPlaces","Fragment","deletedPlaceId","prevPlaces","filter","p"],"mappings":"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","file":"static/js/7.c5423053.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","import React, { useEffect } from 'react';\r\nimport './Map.css';\r\n\r\nconst API_KEY = 'jtBQVl778ihiecS8lTCKjZMb9nndjn1L';\r\n\r\n\r\nconst createMarker = (tt, map, icon, position, color, popupText) => {\r\n    let markerElement = document.createElement('div');\r\n    markerElement.className = 'marker';\r\n    let markerContentElement = document.createElement('div');\r\n    markerContentElement.className = 'marker-content';\r\n    markerContentElement.style.backgroundColor = color;\r\n    markerElement.appendChild(markerContentElement);\r\n    let iconElement = document.createElement('div');\r\n    iconElement.className = 'marker-icon';\r\n    iconElement.style.backgroundImage =\r\n        'url('+icon+')';\r\n    markerContentElement.appendChild(iconElement);\r\n    let popup = new tt.Popup({ offset: 30 }).setHTML('<h4>' + popupText + '</h4>');\r\n    // add marker to map\r\n    new tt.Marker({ element: markerElement, anchor: 'bottom' })\r\n        .setLngLat(position)\r\n        .setPopup(popup)\r\n        .addTo(map);\r\n    console.log(icon);\r\n}\r\n\r\nconst Map = props => {\r\n    const { center, title, icon } = props;\r\n\r\n    useEffect(() => {\r\n        const tt = window.tt;\r\n\r\n        const map = tt.map({\r\n            key: API_KEY,\r\n            container: 'map',\r\n            style: 'tomtom://raster/1/basic-main',\r\n            center: center,\r\n            zoom: 14\r\n        });\r\n\r\n        map.addControl(new tt.FullscreenControl());\r\n        map.addControl(new tt.NavigationControl());\r\n\r\n        createMarker(tt, map, icon , [center.lng, center.lat], '#292929', title);\r\n\r\n    }, [center, title, icon]);\r\n\r\n    return <div id=\"map\" className={`map ${props.className}`}></div>\r\n};\r\n\r\nexport default Map;\r\n\r\n\r\n/*\r\n\r\n// ------------------------USING MAPBOX------------------------\r\n\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport './Map.css';\r\n\r\nconst Map = props => {\r\n    const mapRef = useRef();\r\n    const {container, center} = props;\r\n\r\n    useEffect(() => {\r\n        mapboxgl.accessToken = 'pk.eyJ1Ijoid2hpdGVtaWNyb3Bob25lMTAiLCJhIjoiY2tmOGw0ampmMGRjczJ1bzh4aHN4ODdhMCJ9.Qj_lx-sQeh1HbVJSTmpZgQ';\r\n        const map = new mapboxgl.Map({\r\n            container: mapRef.current,\r\n            style: 'mapbox://styles/mapbox/navigation-preview-night-v4', // stylesheet location\r\n            center: center, // starting position [lng, lat]\r\n            zoom: 18 // starting zoom\r\n        });\r\n        map.addControl(new mapboxgl.NavigationControl());\r\n\r\n        new mapboxgl.Marker({position: center, map: map});\r\n    },[container, center]);\r\n\r\n    return <div ref={mapRef} className={`map ${props.className}`} style={props.style}></div>\r\n};\r\n\r\nexport default Map;\r\n\r\n*/","import React, { useState, Fragment, useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport Map from '../../shared/components/UIElements/Map';\r\n\r\nimport './PlaceItem.css';\r\nimport { AuthContext } from '../../shared/context/AuthContext';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\n\r\nconst PlaceItem = props => {\r\n\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const [showMap, setShowMap] = useState(false);\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n\r\n    const openMapHandler = () => setShowMap(true);\r\n\r\n    const closeMapHandler = () => setShowMap(false);\r\n\r\n    const showDeleteWarningHandler = () => setShowConfirmModal(true);\r\n\r\n    const closeDeleteWarningHandler = () => setShowConfirmModal(false);\r\n\r\n    const confirmDeleteHandler = async () => {\r\n        setShowConfirmModal(false);\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\r\n                'DELETE',\r\n                null,\r\n                {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            props.onDelete(props.id);\r\n        } catch (error) { };\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <Modal\r\n                show={showMap}\r\n                onCancel={closeMapHandler}\r\n                header={props.address}\r\n                contentClass=\"place-item__modal-content\"\r\n                footerClass=\"place-item__modal-actions\"\r\n                footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n            >\r\n                <div className=\"map-container\">\r\n                    <Map center={props.coordinates} title={props.title} icon=\"https://img.favpng.com/12/5/19/earth-globe-icon-png-favpng-158Cm0TE9AfghUukUATwiVVdT.jpg\" />\r\n                </div>\r\n            </Modal>\r\n\r\n            <Modal\r\n                show={showConfirmModal}\r\n                onCancel={closeDeleteWarningHandler}\r\n                header=\"Are you sure?\"\r\n                footerClass=\"place-item__modal-actions\"\r\n                footer={\r\n                    <Fragment>\r\n                        <Button inverse onClick={closeDeleteWarningHandler}>CANCEL</Button>\r\n                        <Button danger onClick={confirmDeleteHandler}>DELETE</Button>\r\n                    </Fragment>\r\n                }\r\n            >\r\n                <p>\r\n                    <strong>Do you want to proceed and delete this place?</strong>&nbsp;Please note that this action cannot be undone thereafter.\r\n                </p>\r\n            </Modal>\r\n\r\n            <li className=\"place-item\">\r\n                <Card className=\"place-item__content\">\r\n                    {isLoading && <LoadingSpinner asOverlay />}\r\n                    <div className=\"place-item__image\">\r\n                        <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title} />\r\n                    </div>\r\n                    <div className=\"place-item__info\">\r\n                        <h2>{props.title}</h2>\r\n                        <h3>{props.address}</h3>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className=\"place-item__actions\">\r\n                        <Button inverse onClick={openMapHandler}>VIEW ON MAP</Button>\r\n                        {auth.userId === props.creatorID &&\r\n                            <Button to={`/places/${props.id}`}>EDIT</Button>\r\n                        }\r\n                        {auth.userId === props.creatorID &&\r\n                            <Button danger onClick={showDeleteWarningHandler}>DELETE</Button>\r\n                        }\r\n                    </div>\r\n                </Card>\r\n            </li>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default PlaceItem;","import React from 'react';\r\n\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport PlaceItem from './PlaceItem';\r\n\r\nimport './PlaceList.css';\r\n\r\nconst PlaceList = props => {\r\n    if (!props.items) {\r\n        return (\r\n            <div className=\"place-list center\">\r\n                <Card className=\"card-white\">\r\n                    <h2>No places found. Maybe create one?</h2>\r\n                    <Button to=\"/places/new\">Share Place</Button>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ul className=\"place-list\">\r\n            {props.items.map(place => (\r\n                <PlaceItem\r\n                    key={place.id}\r\n                    id={place.id}\r\n                    image={place.image}\r\n                    title={place.title}\r\n                    description={place.description}\r\n                    address={place.address}\r\n                    creatorID={place.creator}\r\n                    coordinates={place.location}\r\n                    onDelete={props.onDeletePlace}\r\n                />\r\n            ))\r\n            }\r\n        </ul>\r\n    )\r\n\r\n};\r\n\r\nexport default PlaceList;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport PlaceList from '../components/PlaceList';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst UserPlace = () => {\r\n\r\n    const [loadedPlaces, setLoadedPlaces] = useState();\r\n    const { isLoading, sendRequest } = useHttpClient();\r\n\r\n    const userId = useParams().userId;\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchPlaces = async () => {\r\n            let responseData;\r\n            try {\r\n                responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`);\r\n                setLoadedPlaces(responseData.places);\r\n            } catch (error) {\r\n                setLoadedPlaces(null);\r\n            };\r\n        };\r\n\r\n        fetchPlaces();\r\n    }, [sendRequest, userId]);\r\n\r\n    const placeDeletedHandler = (deletedPlaceId) => {\r\n        setLoadedPlaces(prevPlaces =>\r\n            prevPlaces.filter(p => p.id !== deletedPlaceId)\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading && (\r\n                <div className=\"center\">\r\n                    <LoadingSpinner className=\"white-loader\" />\r\n                </div>\r\n            )}\r\n            {!isLoading && <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />}\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default UserPlace;"],"sourceRoot":""}