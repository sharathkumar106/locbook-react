{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","shared/components/UIElements/Card.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/Utils/Validator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","users/pages/Authenticate.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","Card","props","className","style","children","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_MAXLENGTH","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","setIsValid","previewUrl","setPreviewUrl","file","setFile","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","Authenticate","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","useHttpClient","isLoading","error","sendRequest","clearError","email","password","inputHandler","setFormData","onAuthenticatonHandler","a","preventDefault","process","JSON","stringify","responseData","login","userId","token","formData","FormData","append","name","image","Fragment","onClear","asOverlay","onSubmit","disabled","inverse","undefined","prevMode"],"mappings":"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","file":"static/js/4.27697e50.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value !==\"\" && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  \r\n  return isValid;\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useEffect, useReducer } from 'react';\r\n\r\nimport { validate } from '../../Utils/Validator';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"CHANGE\":\r\n            // console.log(action.val);\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            };\r\n        case \"TOUCH\":\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Input = props => {\r\n    const [inputState, dispatch] = useReducer(inputReducer,\r\n        {\r\n            value: props.initialValue || '',\r\n            isTouched: false,\r\n            isValid: props.initialValid || false\r\n        });\r\n\r\n    const { id, onInput } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        onInput(id, value, isValid);\r\n    }, [id, value, isValid, onInput]);\r\n\r\n    const changeHandler = (event) => {\r\n        dispatch({\r\n            type: \"CHANGE\",\r\n            val: event.target.value,\r\n            validators: props.validators\r\n        });\r\n    };\r\n\r\n    const touchHandler = () => {\r\n        dispatch({ type: \"TOUCH\" })\r\n    }\r\n\r\n    const element = props.element === 'input' ? (\r\n        <input id={props.id}\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value}\r\n        />\r\n    ) : (\r\n            <textarea\r\n                id={props.id}\r\n                rows={props.rows || 3}\r\n                onChange={changeHandler}\r\n                onBlur={touchHandler}\r\n                value={inputState.value}\r\n            />\r\n        );\r\n\r\n    return (\r\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n            {element}\r\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Input;","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"INPUT_CHANGE\":\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                if(!state.inputs[inputId]){\r\n                    continue;\r\n                }\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                }\r\n                else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\r\n                },\r\n                isValid: formIsValid\r\n            };\r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    });\r\n\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE',\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id\r\n        });\r\n    }, []);\r\n\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        });\r\n    }, [])\r\n\r\n    return [formState, inputHandler, setFormData];\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport Button from '../FormElements/Button';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n    const [isValid, setIsValid] = useState(false);\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [file, setFile] = useState();\r\n    const filePickerRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (!file) {\r\n            return;\r\n        }\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result);\r\n        };\r\n        fileReader.readAsDataURL(file);\r\n    }, [file])\r\n\r\n    const pickedHandler = event => {\r\n        let pickedFile;\r\n        let fileIsValid = isValid;\r\n        if (event.target.files && event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0];\r\n            setFile(pickedFile);\r\n            setIsValid(true);\r\n            fileIsValid = true;\r\n        } else {\r\n            setIsValid(false);\r\n            fileIsValid = false;\r\n        }\r\n        props.onInput(props.id, pickedFile, fileIsValid);\r\n    }\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click();\r\n    }\r\n    return (\r\n        <div className=\"form-control\">\r\n            <input\r\n                id={props.id}\r\n                ref={filePickerRef}\r\n                style={{ display: 'none' }}\r\n                type=\"file\"\r\n                accept=\".jpg, .png, .jpeg\"\r\n                onChange={pickedHandler}\r\n            />\r\n            <div className={`image-upload ${props.center && 'center'}`}>\r\n                <div className=\"image-upload__preview\">\r\n                    {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n                    {!previewUrl && <p>Please upload an image.</p>}\r\n                </div>\r\n                <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\r\n            </div>\r\n            {!isValid && <p>{props.errorText}</p>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ImageUpload;","import React, { useContext, useState } from 'react';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\n\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { VALIDATOR_EMAIL, VALIDATOR_MAXLENGTH, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/Utils/Validator';\r\n\r\nimport './Authenticate.css'\r\nimport { AuthContext } from '../../shared/context/AuthContext';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\n\r\nconst Authenticate = props => {\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [isLoginMode, setIsLoginMode] = useState(true);\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const [formState, inputHandler, setFormData] = useForm(\r\n        {\r\n            email: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            password: {\r\n                value: '',\r\n                isValid: false\r\n            }\r\n        }, false\r\n    );\r\n\r\n    const switchModeHandler = () => {\r\n        if (!isLoginMode) {\r\n            setFormData({\r\n                ...formState.inputs,\r\n                name: undefined,\r\n                image: undefined\r\n            }, formState.inputs.email.isValid && formState.inputs.password.isValid);\r\n        }\r\n        else {\r\n            setFormData({\r\n                ...formState.inputs,\r\n                name: {\r\n                    value: '',\r\n                    isValid: false\r\n                },\r\n                image: {\r\n                    value: null,\r\n                    isValid: false\r\n                }\r\n            }, false);\r\n        }\r\n\r\n        setIsLoginMode(prevMode => (!prevMode));\r\n    }\r\n\r\n    const onAuthenticatonHandler = async event => {\r\n        event.preventDefault();\r\n\r\n        if (isLoginMode) {\r\n            try {\r\n                const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users/login', 'POST',\r\n                    JSON.stringify({\r\n                        email: formState.inputs.email.value,\r\n                        password: formState.inputs.password.value\r\n                    }),\r\n                    {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                );\r\n                auth.login(responseData.userId, responseData.token);\r\n            } catch (error) { }\r\n        } else {\r\n            try {\r\n                const formData = new FormData();\r\n                formData.append('email', formState.inputs.email.value);\r\n                formData.append('name', formState.inputs.name.value);\r\n                formData.append('password', formState.inputs.password.value);\r\n                formData.append('image', formState.inputs.image.value);\r\n\r\n                const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users/signup',\r\n                    'POST',\r\n                    formData\r\n                );\r\n\r\n                auth.login(responseData.userId, responseData.token);\r\n            } catch (error) { }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <Card className=\"authentication card-white\">\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2 className=\"authentication__header\">Login Required!</h2>\r\n                <hr />\r\n\r\n                <form onSubmit={onAuthenticatonHandler}>\r\n                    {!isLoginMode && (\r\n                        <Input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            element=\"input\"\r\n                            label=\"Your Name\"\r\n                            onInput={inputHandler}\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"Please enter your name\"\r\n                            placeholder=\"Enter your name\"\r\n                        />\r\n                    )}\r\n\r\n                    {!isLoginMode && <ImageUpload center id=\"image\" onInput={inputHandler} errorText=\"Please upload an image\" />}\r\n\r\n                    <Input\r\n                        id=\"email\"\r\n                        type=\"text\"\r\n                        element=\"input\"\r\n                        label=\"Email ID\"\r\n                        placeholder=\"Enter your e-mail id\"\r\n                        validators={[VALIDATOR_EMAIL()]}\r\n                        errorText=\"Enter a valid e-mail id\"\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <Input\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        element=\"input\"\r\n                        label=\"Password\"\r\n                        placeholder=\"**********\"\r\n                        validators={[VALIDATOR_MINLENGTH(8), VALIDATOR_MAXLENGTH(20)]}\r\n                        errorText=\"Passwords must be min. 8 characters and max. 20 characters long\"\r\n                        onInput={inputHandler}\r\n                    />\r\n\r\n                    <Button type=\"submit\" className=\"btn-center\" disabled={!formState.isValid}>\r\n                        {isLoginMode ? 'LOGIN' : 'SIGN UP'}\r\n                    </Button>\r\n                </form>\r\n\r\n                <Button inverse className=\"btn-center\" onClick={switchModeHandler} >\r\n                    {isLoginMode ? 'SIGN UP' : 'LOGIN'}\r\n                </Button>\r\n            </Card>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Authenticate;"],"sourceRoot":""}