{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","shared/hooks/http-hook.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","../node_modules/regenerator-runtime/runtime.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ErrorModal","props","onCancel","onClear","header","show","footer","onClick","ModalOverlay","content","className","style","headerClass","onSubmit","event","preventDefault","contentClass","children","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","timeout","mountOnEnter","unmountOnExit","classNames","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"static/js/0.8dfb19c0.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const activeHttpRequests = useRef([]);\r\n\r\n    const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setIsLoading(true);\r\n        const httpAbortCtrl = new AbortController();\r\n        activeHttpRequests.current.push(httpAbortCtrl);\r\n        \r\n        try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers,\r\n                signal: httpAbortCtrl.signal\r\n            });\r\n\r\n            const responseData = await response.json();\r\n\r\n            activeHttpRequests.current = activeHttpRequests.current.filter(\r\n                reqCtrl => reqCtrl !== httpAbortCtrl\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error(responseData.message);\r\n            }\r\n\r\n            setIsLoading(false);\r\n            return responseData;\r\n        } catch (error) {\r\n            setError(error.message);\r\n            setIsLoading(false);\r\n            throw error;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = () => {\r\n        setError(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n        return activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    }, []);\r\n\r\n    return { isLoading, error, sendRequest, clearError};\r\n};","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from '../UIElements/Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n            <form onSubmit={props.onSubmit ? props.onSubmit : event => event.preventDefault()}>\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    {props.children}\r\n                </div>\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    {props.footer}\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    )\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n}\r\n\r\nconst Modal = props => {\r\n    return <React.Fragment>\r\n        {props.show && <Backdrop onClick={props.onCancel} />}\r\n        <CSSTransition\r\n            in={props.show}\r\n            timeout={200}\r\n            mountOnEnter\r\n            unmountOnExit\r\n            classNames=\"modal\"\r\n        >\r\n            <ModalOverlay {...props} />\r\n        </CSSTransition>\r\n    </React.Fragment>\r\n};\r\n\r\nexport default Modal;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}